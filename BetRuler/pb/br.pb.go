// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: br.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//Lottery状态
type LotteryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Code int32 `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *LotteryState) Reset() {
	*x = LotteryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_br_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryState) ProtoMessage() {}

func (x *LotteryState) ProtoReflect() protoreflect.Message {
	mi := &file_br_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryState.ProtoReflect.Descriptor instead.
func (*LotteryState) Descriptor() ([]byte, []int) {
	return file_br_proto_rawDescGZIP(), []int{0}
}

func (x *LotteryState) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *LotteryState) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

//Lottery服务器
type LotteryServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime string `protobuf:"bytes,1,opt,name=ServerTime,proto3" json:"ServerTime,omitempty"` //服务器时间
}

func (x *LotteryServer) Reset() {
	*x = LotteryServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_br_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryServer) ProtoMessage() {}

func (x *LotteryServer) ProtoReflect() protoreflect.Message {
	mi := &file_br_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryServer.ProtoReflect.Descriptor instead.
func (*LotteryServer) Descriptor() ([]byte, []int) {
	return file_br_proto_rawDescGZIP(), []int{1}
}

func (x *LotteryServer) GetServerTime() string {
	if x != nil {
		return x.ServerTime
	}
	return ""
}

//lottery信息
type LotteryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Periods     string `protobuf:"bytes,1,opt,name=Periods,proto3" json:"Periods,omitempty"`
	BeginTime   string `protobuf:"bytes,2,opt,name=BeginTime,proto3" json:"BeginTime,omitempty"`
	OpenTime    string `protobuf:"bytes,3,opt,name=OpenTime,proto3" json:"OpenTime,omitempty"`
	CollectTime string `protobuf:"bytes,4,opt,name=CollectTime,proto3" json:"CollectTime,omitempty"`
	OpenContent string `protobuf:"bytes,5,opt,name=OpenContent,proto3" json:"OpenContent,omitempty"`
}

func (x *LotteryInfo) Reset() {
	*x = LotteryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_br_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryInfo) ProtoMessage() {}

func (x *LotteryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_br_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryInfo.ProtoReflect.Descriptor instead.
func (*LotteryInfo) Descriptor() ([]byte, []int) {
	return file_br_proto_rawDescGZIP(), []int{2}
}

func (x *LotteryInfo) GetPeriods() string {
	if x != nil {
		return x.Periods
	}
	return ""
}

func (x *LotteryInfo) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *LotteryInfo) GetOpenTime() string {
	if x != nil {
		return x.OpenTime
	}
	return ""
}

func (x *LotteryInfo) GetCollectTime() string {
	if x != nil {
		return x.CollectTime
	}
	return ""
}

func (x *LotteryInfo) GetOpenContent() string {
	if x != nil {
		return x.OpenContent
	}
	return ""
}

//lottery信息列表
type LotteryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lotterys []*LotteryInfo `protobuf:"bytes,1,rep,name=Lotterys,proto3" json:"Lotterys,omitempty"`
}

func (x *LotteryList) Reset() {
	*x = LotteryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_br_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryList) ProtoMessage() {}

func (x *LotteryList) ProtoReflect() protoreflect.Message {
	mi := &file_br_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryList.ProtoReflect.Descriptor instead.
func (*LotteryList) Descriptor() ([]byte, []int) {
	return file_br_proto_rawDescGZIP(), []int{3}
}

func (x *LotteryList) GetLotterys() []*LotteryInfo {
	if x != nil {
		return x.Lotterys
	}
	return nil
}

//下一期信息
type LotteryNext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LotInfo *LotteryInfo `protobuf:"bytes,1,opt,name=LotInfo,proto3" json:"LotInfo,omitempty"` //下一期信息
}

func (x *LotteryNext) Reset() {
	*x = LotteryNext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_br_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryNext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryNext) ProtoMessage() {}

func (x *LotteryNext) ProtoReflect() protoreflect.Message {
	mi := &file_br_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryNext.ProtoReflect.Descriptor instead.
func (*LotteryNext) Descriptor() ([]byte, []int) {
	return file_br_proto_rawDescGZIP(), []int{4}
}

func (x *LotteryNext) GetLotInfo() *LotteryInfo {
	if x != nil {
		return x.LotInfo
	}
	return nil
}

//最近一期开奖信息
type LotteryLatest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LotInfo *LotteryInfo `protobuf:"bytes,1,opt,name=LotInfo,proto3" json:"LotInfo,omitempty"` //最近一期开奖信息
}

func (x *LotteryLatest) Reset() {
	*x = LotteryLatest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_br_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryLatest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryLatest) ProtoMessage() {}

func (x *LotteryLatest) ProtoReflect() protoreflect.Message {
	mi := &file_br_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryLatest.ProtoReflect.Descriptor instead.
func (*LotteryLatest) Descriptor() ([]byte, []int) {
	return file_br_proto_rawDescGZIP(), []int{5}
}

func (x *LotteryLatest) GetLotInfo() *LotteryInfo {
	if x != nil {
		return x.LotInfo
	}
	return nil
}

//Lottery请求消息
type LotteryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *LotteryRequest) Reset() {
	*x = LotteryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_br_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryRequest) ProtoMessage() {}

func (x *LotteryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_br_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryRequest.ProtoReflect.Descriptor instead.
func (*LotteryRequest) Descriptor() ([]byte, []int) {
	return file_br_proto_rawDescGZIP(), []int{6}
}

func (x *LotteryRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

//lotteryLottery响应消息
type LotteryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*LotteryResponse_LotStatus
	//	*LotteryResponse_LotServer
	//	*LotteryResponse_LotList
	//	*LotteryResponse_LotNext
	//	*LotteryResponse_LotLatest
	Data isLotteryResponse_Data `protobuf_oneof:"Data"`
}

func (x *LotteryResponse) Reset() {
	*x = LotteryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_br_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryResponse) ProtoMessage() {}

func (x *LotteryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_br_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryResponse.ProtoReflect.Descriptor instead.
func (*LotteryResponse) Descriptor() ([]byte, []int) {
	return file_br_proto_rawDescGZIP(), []int{7}
}

func (m *LotteryResponse) GetData() isLotteryResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *LotteryResponse) GetLotStatus() *LotteryState {
	if x, ok := x.GetData().(*LotteryResponse_LotStatus); ok {
		return x.LotStatus
	}
	return nil
}

func (x *LotteryResponse) GetLotServer() *LotteryServer {
	if x, ok := x.GetData().(*LotteryResponse_LotServer); ok {
		return x.LotServer
	}
	return nil
}

func (x *LotteryResponse) GetLotList() *LotteryList {
	if x, ok := x.GetData().(*LotteryResponse_LotList); ok {
		return x.LotList
	}
	return nil
}

func (x *LotteryResponse) GetLotNext() *LotteryNext {
	if x, ok := x.GetData().(*LotteryResponse_LotNext); ok {
		return x.LotNext
	}
	return nil
}

func (x *LotteryResponse) GetLotLatest() *LotteryLatest {
	if x, ok := x.GetData().(*LotteryResponse_LotLatest); ok {
		return x.LotLatest
	}
	return nil
}

type isLotteryResponse_Data interface {
	isLotteryResponse_Data()
}

type LotteryResponse_LotStatus struct {
	LotStatus *LotteryState `protobuf:"bytes,1,opt,name=LotStatus,proto3,oneof"` //状态信息
}

type LotteryResponse_LotServer struct {
	LotServer *LotteryServer `protobuf:"bytes,2,opt,name=LotServer,proto3,oneof"` //服务器时间
}

type LotteryResponse_LotList struct {
	LotList *LotteryList `protobuf:"bytes,3,opt,name=LotList,proto3,oneof"` //lottery列表
}

type LotteryResponse_LotNext struct {
	LotNext *LotteryNext `protobuf:"bytes,4,opt,name=LotNext,proto3,oneof"` //下期信息
}

type LotteryResponse_LotLatest struct {
	LotLatest *LotteryLatest `protobuf:"bytes,5,opt,name=LotLatest,proto3,oneof"` //开奖信息
}

func (*LotteryResponse_LotStatus) isLotteryResponse_Data() {}

func (*LotteryResponse_LotServer) isLotteryResponse_Data() {}

func (*LotteryResponse_LotList) isLotteryResponse_Data() {}

func (*LotteryResponse_LotNext) isLotteryResponse_Data() {}

func (*LotteryResponse_LotLatest) isLotteryResponse_Data() {}

var File_br_proto protoreflect.FileDescriptor

var file_br_proto_rawDesc = []byte{
	0x0a, 0x08, 0x62, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x36,
	0x0a, 0x0c, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x3a, 0x0a, 0x0b, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x08, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x73, 0x22, 0x38, 0x0a, 0x0b, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x4c, 0x6f,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x4c, 0x6f,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x0a, 0x0d, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x4c, 0x6f, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x24, 0x0a, 0x0e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x0f, 0x4c, 0x6f, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x4c,
	0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x4c, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a,
	0x09, 0x4c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x4c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x07, 0x4c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x4c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x07, 0x4c, 0x6f, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4e, 0x65, 0x78, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x4c, 0x6f, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x4c, 0x6f,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x4c, 0x6f, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x06, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x32, 0x4b, 0x0a, 0x0c, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x6f,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0c, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0xaa, 0x02, 0x02, 0x50, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_br_proto_rawDescOnce sync.Once
	file_br_proto_rawDescData = file_br_proto_rawDesc
)

func file_br_proto_rawDescGZIP() []byte {
	file_br_proto_rawDescOnce.Do(func() {
		file_br_proto_rawDescData = protoimpl.X.CompressGZIP(file_br_proto_rawDescData)
	})
	return file_br_proto_rawDescData
}

var file_br_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_br_proto_goTypes = []interface{}{
	(*LotteryState)(nil),    // 0: pb.LotteryState
	(*LotteryServer)(nil),   // 1: pb.LotteryServer
	(*LotteryInfo)(nil),     // 2: pb.LotteryInfo
	(*LotteryList)(nil),     // 3: pb.LotteryList
	(*LotteryNext)(nil),     // 4: pb.LotteryNext
	(*LotteryLatest)(nil),   // 5: pb.LotteryLatest
	(*LotteryRequest)(nil),  // 6: pb.LotteryRequest
	(*LotteryResponse)(nil), // 7: pb.LotteryResponse
}
var file_br_proto_depIdxs = []int32{
	2, // 0: pb.LotteryList.Lotterys:type_name -> pb.LotteryInfo
	2, // 1: pb.LotteryNext.LotInfo:type_name -> pb.LotteryInfo
	2, // 2: pb.LotteryLatest.LotInfo:type_name -> pb.LotteryInfo
	0, // 3: pb.LotteryResponse.LotStatus:type_name -> pb.LotteryState
	1, // 4: pb.LotteryResponse.LotServer:type_name -> pb.LotteryServer
	3, // 5: pb.LotteryResponse.LotList:type_name -> pb.LotteryList
	4, // 6: pb.LotteryResponse.LotNext:type_name -> pb.LotteryNext
	5, // 7: pb.LotteryResponse.LotLatest:type_name -> pb.LotteryLatest
	6, // 8: pb.LotteryQuery.FetchLotteryInfo:input_type -> pb.LotteryRequest
	7, // 9: pb.LotteryQuery.FetchLotteryInfo:output_type -> pb.LotteryResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_br_proto_init() }
func file_br_proto_init() {
	if File_br_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_br_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_br_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_br_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_br_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_br_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryNext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_br_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryLatest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_br_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_br_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_br_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*LotteryResponse_LotStatus)(nil),
		(*LotteryResponse_LotServer)(nil),
		(*LotteryResponse_LotList)(nil),
		(*LotteryResponse_LotNext)(nil),
		(*LotteryResponse_LotLatest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_br_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_br_proto_goTypes,
		DependencyIndexes: file_br_proto_depIdxs,
		MessageInfos:      file_br_proto_msgTypes,
	}.Build()
	File_br_proto = out.File
	file_br_proto_rawDesc = nil
	file_br_proto_goTypes = nil
	file_br_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LotteryQueryClient is the client API for LotteryQuery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LotteryQueryClient interface {
	FetchLotteryInfo(ctx context.Context, in *LotteryRequest, opts ...grpc.CallOption) (*LotteryResponse, error)
}

type lotteryQueryClient struct {
	cc grpc.ClientConnInterface
}

func NewLotteryQueryClient(cc grpc.ClientConnInterface) LotteryQueryClient {
	return &lotteryQueryClient{cc}
}

func (c *lotteryQueryClient) FetchLotteryInfo(ctx context.Context, in *LotteryRequest, opts ...grpc.CallOption) (*LotteryResponse, error) {
	out := new(LotteryResponse)
	err := c.cc.Invoke(ctx, "/pb.LotteryQuery/FetchLotteryInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LotteryQueryServer is the server API for LotteryQuery service.
type LotteryQueryServer interface {
	FetchLotteryInfo(context.Context, *LotteryRequest) (*LotteryResponse, error)
}

// UnimplementedLotteryQueryServer can be embedded to have forward compatible implementations.
type UnimplementedLotteryQueryServer struct {
}

func (*UnimplementedLotteryQueryServer) FetchLotteryInfo(context.Context, *LotteryRequest) (*LotteryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchLotteryInfo not implemented")
}

func RegisterLotteryQueryServer(s *grpc.Server, srv LotteryQueryServer) {
	s.RegisterService(&_LotteryQuery_serviceDesc, srv)
}

func _LotteryQuery_FetchLotteryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LotteryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LotteryQueryServer).FetchLotteryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LotteryQuery/FetchLotteryInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LotteryQueryServer).FetchLotteryInfo(ctx, req.(*LotteryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LotteryQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.LotteryQuery",
	HandlerType: (*LotteryQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchLotteryInfo",
			Handler:    _LotteryQuery_FetchLotteryInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "br.proto",
}
